load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "service-one_lib",
    srcs = ["main.go"],
    importpath = "monorepo/src/service-one",
    visibility = ["//visibility:private"],
    deps = [
        "//src/libs/hello",
        "@com_github_gin_gonic_gin//:gin",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_opentracing_opentracing_go//ext",
        "@com_github_uber_jaeger_client_go//:jaeger-client-go",
        "@com_github_uber_jaeger_client_go//config",
        "@com_github_uber_jaeger_client_go//log",
        "@com_github_uber_jaeger_lib//metrics",
    ],
)

go_binary(
    name = "service-one",
    embed = [":service-one_lib"],
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_image(
    name = "go_image",
    embed = [":service-one_lib"],
    importpath = "monorepo/service-one",
)

load("@io_bazel_rules_docker//container:container.bzl", "container_image")

container_image(
    name = "image",
    base = ":go_image",
    repository = "khdoba",  ## Replace <khdoba> with your DockerHub ID, or any repository ID:
)

load("@io_bazel_rules_docker//container:container.bzl", "container_push")

container_push(
    name = "image-push",
    format = "Docker",
    image = ":image",
    registry = "index.docker.io",  ## Replace <index.docker.io> with your docker registry
    repository = "khdoba/service-one",  ## Replace <khdoba/service-one> with repository path
)
